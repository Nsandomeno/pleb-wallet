{"ast":null,"code":"var _jsxFileName = \"/Users/nicholassandomeno/projects/pleb-wallet/src/components/Transactions.js\";\nimport React from \"react\";\nimport \"./Transactions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = props => {\n  // const transactions = [\n  //     {\n  //         checking_id: 1,\n  //         amount: 1000,\n  //         time: 1669064951,\n  //         bolt11: \"lnbc20n1p3h24fhsp590ccjwy...\",\n  //     },\n  //     {\n  //         checking_id: 2,\n  //         amount: 2000,\n  //         time: 1668035952,\n  //         bolt11: \"lnbc980n1p3h24fhsp5cpcjdw...\",\n  //     },\n  // ];\n  // ToDo: Improve tx parsing to display internal payments, incomplete payments, and further verify the transactions we are listing out\n  const parseTx = tx => {\n    // turn unix timestamp into a date\n    // Todo: format date further to include hours, minutes, and seconds\n    const date = new Date(tx.time * 1000);\n    const formattedDate = date.toLocaleDateString(\"en-US\");\n    // ToDo: Handle pending payments since we are currently ignoring them and not displaying them on our past transactions list\n    if (tx.pending) return null;\n    if (tx.amount > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tx-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Received from \", tx.bolt11.substring(0, 25), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"+\", tx.amount / 1000, \" sats\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transaction-date\",\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, tx.checking_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this);\n    }\n    if (tx.amount < 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: tx.checking_id,\n        className: \"tx-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sent with \", tx.bolt11.substring(0, 25), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tx-amount\",\n          children: [tx.amount / 1000, \" sats\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transaction-date\",\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, tx.checking_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    }\n  };\n};\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","Transactions","props","parseTx","tx","date","Date","time","formattedDate","toLocaleDateString","pending","amount","bolt11","substring","checking_id"],"sources":["/Users/nicholassandomeno/projects/pleb-wallet/src/components/Transactions.js"],"sourcesContent":["import React from \"react\";\nimport \"./Transactions.css\";\n\nexport const Transactions = (props) => {\n    // const transactions = [\n    //     {\n    //         checking_id: 1,\n    //         amount: 1000,\n    //         time: 1669064951,\n    //         bolt11: \"lnbc20n1p3h24fhsp590ccjwy...\",\n    //     },\n    //     {\n    //         checking_id: 2,\n    //         amount: 2000,\n    //         time: 1668035952,\n    //         bolt11: \"lnbc980n1p3h24fhsp5cpcjdw...\",\n    //     },\n    // ];\n    // ToDo: Improve tx parsing to display internal payments, incomplete payments, and further verify the transactions we are listing out\n    const parseTx = (tx) => {\n        // turn unix timestamp into a date\n        // Todo: format date further to include hours, minutes, and seconds\n        const date = new Date(tx.time * 1000);\n        const formattedDate = date.toLocaleDateString(\"en-US\");\n        // ToDo: Handle pending payments since we are currently ignoring them and not displaying them on our past transactions list\n        if (tx.pending) return null;\n        if (tx.amount > 0) {\n            return (\n                <div key={tx.checking_id} className=\"tx-item\">\n                    <p>Received from {tx.bolt11.substring(0, 25)}...</p>\n                    <p>+{tx.amount / 1000} sats</p>\n                    <p className=\"transaction-date\">{formattedDate}</p>\n                </div>\n            );\n        }\n        if (tx.amount < 0) {\n            return (\n                <div id={tx.checking_id} key={tx.checking_id} className=\"tx-item\">\n                    <p>Sent with {tx.bolt11.substring(0, 25)}...</p>\n                    <p className=\"tx-amount\">{tx.amount / 1000} sats</p>\n                    <p className=\"transaction-date\">{formattedDate}</p>\n                </div>\n            );\n            }\n    }\n}\n\nexport default Transactions;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC;AAE5B,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAIC,EAAE,IAAK;IACpB;IACA;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,EAAE,CAACG,IAAI,GAAG,IAAI,CAAC;IACrC,MAAMC,aAAa,GAAGH,IAAI,CAACI,kBAAkB,CAAC,OAAO,CAAC;IACtD;IACA,IAAIL,EAAE,CAACM,OAAO,EAAE,OAAO,IAAI;IAC3B,IAAIN,EAAE,CAACO,MAAM,GAAG,CAAC,EAAE;MACf,oBACI;QAA0B,SAAS,EAAC,SAAS;QAAA,wBACzC;UAAA,6BAAkBP,EAAE,CAACQ,MAAM,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpD;UAAA,gBAAKT,EAAE,CAACO,MAAM,GAAG,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAU,eAC/B;UAAG,SAAS,EAAC,kBAAkB;UAAA,UAAEH;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAH7CJ,EAAE,CAACU,WAAW;QAAA;QAAA;QAAA;MAAA,QAIlB;IAEd;IACA,IAAIV,EAAE,CAACO,MAAM,GAAG,CAAC,EAAE;MACf,oBACI;QAAK,EAAE,EAAEP,EAAE,CAACU,WAAY;QAAsB,SAAS,EAAC,SAAS;QAAA,wBAC7D;UAAA,yBAAcV,EAAE,CAACQ,MAAM,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eAChD;UAAG,SAAS,EAAC,WAAW;UAAA,WAAET,EAAE,CAACO,MAAM,GAAG,IAAI;QAAA;UAAA;UAAA;UAAA;QAAA,QAAU,eACpD;UAAG,SAAS,EAAC,kBAAkB;UAAA,UAAEH;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAHzBJ,EAAE,CAACU,WAAW;QAAA;QAAA;QAAA;MAAA,QAItC;IAEV;EACR,CAAC;AACL,CAAC;AAAA,KA1CYb,YAAY;AA4CzB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}