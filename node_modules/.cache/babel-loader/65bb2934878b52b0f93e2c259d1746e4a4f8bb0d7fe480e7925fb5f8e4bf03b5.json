{"ast":null,"code":"var _jsxFileName = \"/Users/nicholassandomeno/projects/pleb-wallet/src/App.js\",\n  _s = $RefreshSig$();\nimport Transactions from \"./components/Transactions\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [price, setPrice] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const getPrice = () => {\n    // Axios is a library that makes it easy to make http requests\n    // After we make a request, we can use the .then() method to handle the response asynchronously\n    // This is an alternative to using async/await\n    axios.get(\"https://api.coinbase.com/v2/prices/BTC-USD/spot\")\n    // .then is a promise that will run when the API call is successful\n    .then(res => {\n      console.log(\"Coinbase Price: \", res.data.data.amount);\n      setPrice(res.data.data.amount);\n    })\n    // .catch is a promise that will run if the API call fails\n    .catch(err => {\n      console.log(err);\n    });\n  };\n  const getWalletBalance = () => {\n    // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n    const headers = {\n      \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\"\n    };\n    axios.get(\"https://legend.lnbits.com/api/v1/wallet\", {\n      headers\n    }).then(res => {\n      // Divide our balance by 1000 since it is denominated in millisats\n      setBalance(res.data.balance / 1000);\n    }).catch(err => console.log(err));\n  };\n  const getTransactions = () => {\n    // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n    const headers = {\n      \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\"\n    };\n    axios.get(\"https://legend.lnbits.com/api/v1/payments\", {\n      headers\n    }).then(res => {\n      setTransactions(res.data);\n    }).catch(err => console.log(err));\n  };\n  // useEffect is a 'hook' or special function that will run code based on a trigger\n  // The brackets hold the trigger that determines when the code inside of useEffect will run\n  // Since it is empty [] that means this code will run once on page load\n  useEffect(() => {\n    getPrice();\n    getWalletBalance();\n    getTransactions();\n  }, []);\n  useEffect(() => {\n    // setInterval will run whatever is in the callback function every 5 seconds\n    const interval = setInterval(() => {\n      getPrice();\n      getWalletBalance();\n      getTransactions();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"pleb wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [balance, \" sats\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-item\",\n        children: /*#__PURE__*/_jsxDEV(Transactions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q34uGDfTmODTMJHDYni7WGU5z+0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Transactions","React","useEffect","useState","axios","App","price","setPrice","balance","setBalance","transactions","setTransactions","getPrice","get","then","res","console","log","data","amount","catch","err","getWalletBalance","headers","getTransactions","interval","setInterval","clearInterval"],"sources":["/Users/nicholassandomeno/projects/pleb-wallet/src/App.js"],"sourcesContent":["import Transactions from \"./components/Transactions\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n    const [price, setPrice] = useState(null);\n    const [balance, setBalance] = useState(null);\n    const [transactions, setTransactions ] = useState([]);\n\n    const getPrice = () => {\n      // Axios is a library that makes it easy to make http requests\n      // After we make a request, we can use the .then() method to handle the response asynchronously\n      // This is an alternative to using async/await\n      axios\n      .get(\"https://api.coinbase.com/v2/prices/BTC-USD/spot\")\n      // .then is a promise that will run when the API call is successful\n      .then((res) => {\n        console.log(\"Coinbase Price: \", res.data.data.amount);\n        setPrice(res.data.data.amount);\n      })\n      // .catch is a promise that will run if the API call fails\n      .catch((err) => {\n        console.log(err);\n      });\n     };\n     const getWalletBalance = () => {\n      // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n       const headers = {\n        \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\" ,\n       };\n       axios\n       .get(\"https://legend.lnbits.com/api/v1/wallet\" , { headers })\n       .then((res) => {\n        // Divide our balance by 1000 since it is denominated in millisats\n        setBalance(res.data.balance / 1000);\n       })\n       .catch((err) => console.log(err));\n    };\n    \n    const getTransactions = () => {\n      // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n      const headers = {\n      \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\" ,\n      };\n      axios\n        .get(\"https://legend.lnbits.com/api/v1/payments\" , { headers })\n        .then((res) => {\n          setTransactions (res.data);\n        })\n        .catch((err) => console.log(err));\n    };\n    // useEffect is a 'hook' or special function that will run code based on a trigger\n    // The brackets hold the trigger that determines when the code inside of useEffect will run\n    // Since it is empty [] that means this code will run once on page load\n    useEffect(() => {\n      getPrice();\n      getWalletBalance();\n      getTransactions();\n    }, []);\n\n    useEffect(() => {\n      // setInterval will run whatever is in the callback function every 5 seconds\n      const interval = setInterval(() => {\n        getPrice();\n        getWalletBalance();\n        getTransactions();\n      }, 5000);\n      return () => clearInterval(interval);\n    }, []);\nreturn (\n    <div className=\"App\">\n      <header>\n        <h1>pleb wallet</h1>\n      </header>\n      {/* <Buttons /> */}\n      <div className=\"row\">\n        <div className=\"balance-card\">\n          <h2>Balance</h2>\n          <p>{balance} sats</p>\n        </div>\n        <div className=\"balance-card\">\n          <h2>Price</h2>\n          <p>${price}</p> \n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"row-item\">\n        {/* <Transactions transactions={transactions} />  */}\n        <Transactions />\n        </div>\n        <div className=\"row-item\">{/* <Chart chartData={chartData} /> */}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}