{"ast":null,"code":"var _jsxFileName = \"/Users/nicholassandomeno/projects/pleb-wallet/src/components/Transactions.js\";\nimport React from \"react\";\nimport \"./Transactions.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = prop => {\n  // const transactions = [\n  //     {\n  //         checking_id: 1,\n  //         amount: 1000,\n  //         time: 1669064951,\n  //         bolt11: \"lnbc20n1p3h24fhsp590ccjwy...\",\n  //     },\n  //     {\n  //         checking_id: 2,\n  //         amount: 2000,\n  //         time: 1668035952,\n  //         bolt11: \"lnbc980n1p3h24fhsp5cpcjdw...\",\n  //     },\n  // ];\n  // ToDo: Improve tx parsing to display internal payments, incomplete payments, and further verify the transactions we are listing out\n  const parseTx = tx => {\n    // turn unix timestamp into a date\n    // Todo: format date further to include hours, minutes, and seconds\n    const date = new Date(tx.time * 1000);\n    const formattedDate = date.toLocaleDateString(\"en-US\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tx-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Received from \", tx.bolt11.substring(0, 25), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"+\", tx.amount / 1000, \" sats\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transaction-date\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, tx.checking_id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tx-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), transactions.map(tx => {\n      return parseTx(tx);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","Transactions","prop","parseTx","tx","date","Date","time","formattedDate","toLocaleDateString","bolt11","substring","amount","checking_id","transactions","map"],"sources":["/Users/nicholassandomeno/projects/pleb-wallet/src/components/Transactions.js"],"sourcesContent":["import React from \"react\";\nimport \"./Transactions.css\";\n\nexport const Transactions = (prop) => {\n    // const transactions = [\n    //     {\n    //         checking_id: 1,\n    //         amount: 1000,\n    //         time: 1669064951,\n    //         bolt11: \"lnbc20n1p3h24fhsp590ccjwy...\",\n    //     },\n    //     {\n    //         checking_id: 2,\n    //         amount: 2000,\n    //         time: 1668035952,\n    //         bolt11: \"lnbc980n1p3h24fhsp5cpcjdw...\",\n    //     },\n    // ];\n    // ToDo: Improve tx parsing to display internal payments, incomplete payments, and further verify the transactions we are listing out\n    const parseTx = (tx) => {\n        // turn unix timestamp into a date\n        // Todo: format date further to include hours, minutes, and seconds\n        const date = new Date(tx.time * 1000);\n        const formattedDate = date.toLocaleDateString(\"en-US\");\n\n        return (\n            <div key={tx.checking_id} className=\"tx-item\">\n                <p>Received from {tx.bolt11.substring(0, 25)}...</p>\n                <p>+{tx.amount / 1000} sats</p>\n                <p className=\"transaction-date\">{formattedDate}</p>\n            </div>\n        );\n    };\n    return (\n        <div className=\"tx-container\">\n            <h3>Transactions</h3>\n            {\n                transactions.map((tx) => {\n                    return parseTx(tx);\n                })\n            }\n        </div>\n    )\n}\n\nexport default Transactions;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAAC;AAE5B,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAIC,EAAE,IAAK;IACpB;IACA;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,EAAE,CAACG,IAAI,GAAG,IAAI,CAAC;IACrC,MAAMC,aAAa,GAAGH,IAAI,CAACI,kBAAkB,CAAC,OAAO,CAAC;IAEtD,oBACI;MAA0B,SAAS,EAAC,SAAS;MAAA,wBACzC;QAAA,6BAAkBL,EAAE,CAACM,MAAM,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpD;QAAA,gBAAKP,EAAE,CAACQ,MAAM,GAAG,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU,eAC/B;QAAG,SAAS,EAAC,kBAAkB;QAAA,UAAEJ;MAAa;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA,GAH7CJ,EAAE,CAACS,WAAW;MAAA;MAAA;MAAA;IAAA,QAIlB;EAEd,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,EAEjBC,YAAY,CAACC,GAAG,CAAEX,EAAE,IAAK;MACrB,OAAOD,OAAO,CAACC,EAAE,CAAC;IACtB,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd,CAAC;AAAA,KAxCYH,YAAY;AA0CzB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}