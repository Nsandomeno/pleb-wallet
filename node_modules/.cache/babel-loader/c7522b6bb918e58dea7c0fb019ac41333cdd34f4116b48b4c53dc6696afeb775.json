{"ast":null,"code":"var _jsxFileName = \"/Users/nicholassandomeno/projects/pleb-wallet/src/App.js\",\n  _s = $RefreshSig$();\nimport Transactions from \"./components/Transactions\";\nimport Button from \"./components/Button\";\nimport Chart from \"./components/Chart\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [price, setPrice] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const updateChartData = currentPrice => {\n    const timestamp = Date.now();\n    // We are able to grab the previous state to look at it and do logic before adding new data to it\n    setChartData(prevState => {\n      // If we have no previous state, create a new array with the new price data\n      if (!prevState) return [{\n        x: timestamp,\n        y: Number(currentPrice)\n      }];\n      // If the timestamp or price has not changed, we don't want to add a new point\n      if (prevState[prevState.length - 1].x === timestamp || prevState[prevState.length - 1].y === Number(currentPrice)) return prevState;\n      // If we have previous state than keep it and add the new price data to the end of the array\n      return [\n      // Here we use the \"spread operator\" to copy the previous state\n      ...prevState, {\n        x: timestamp,\n        y: Number(currentPrice)\n      }];\n    });\n  };\n  const getPrice = () => {\n    // Axios is a library that makes it easy to make http requests\n    // After we make a request, we can use the .then() method to handle the response asynchronously\n    // This is an alternative to using async/await\n    axios.get(\"https://api.coinbase.com/v2/prices/BTC-USD/spot\")\n    // .then is a promise that will run when the API call is successful\n    .then(res => {\n      console.log(\"Coinbase Price: \", res.data.data.amount);\n      setPrice(res.data.data.amount);\n    })\n    // .catch is a promise that will run if the API call fails\n    .catch(err => {\n      console.log(err);\n    });\n  };\n  const getWalletBalance = () => {\n    // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n    const headers = {\n      \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\"\n    };\n    axios.get(\"https://legend.lnbits.com/api/v1/wallet\", {\n      headers\n    }).then(res => {\n      // Divide our balance by 1000 since it is denominated in millisats\n      setBalance(res.data.balance / 1000);\n    }).catch(err => console.log(err));\n  };\n  const getTransactions = () => {\n    // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n    const headers = {\n      \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\"\n    };\n    axios.get(\"https://legend.lnbits.com/api/v1/payments\", {\n      headers\n    }).then(res => {\n      setTransactions(res.data);\n    }).catch(err => console.log(err));\n  };\n  // useEffect is a 'hook' or special function that will run code based on a trigger\n  // The brackets hold the trigger that determines when the code inside of useEffect will run\n  // Since it is empty [] that means this code will run once on page load\n  useEffect(() => {\n    getPrice();\n    getWalletBalance();\n    getTransactions();\n  }, []);\n  useEffect(() => {\n    // setInterval will run whatever is in the callback function every 5 seconds\n    const interval = setInterval(() => {\n      getPrice();\n      getWalletBalance();\n      getTransactions();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"pleb wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [balance, \" sats\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-item\",\n        children: /*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-item\",\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          chartData: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8VZRpY2jgMyEruPL3KlEuLLDz7w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Transactions","Button","Chart","React","useEffect","useState","axios","App","price","setPrice","balance","setBalance","transactions","setTransactions","chartData","setChartData","updateChartData","currentPrice","timestamp","Date","now","prevState","x","y","Number","length","getPrice","get","then","res","console","log","data","amount","catch","err","getWalletBalance","headers","getTransactions","interval","setInterval","clearInterval"],"sources":["/Users/nicholassandomeno/projects/pleb-wallet/src/App.js"],"sourcesContent":["import Transactions from \"./components/Transactions\";\nimport Button from \"./components/Button\";\nimport Chart from \"./components/Chart\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n    const [price, setPrice] = useState(null);\n    const [balance, setBalance] = useState(null);\n    const [transactions, setTransactions ] = useState([]);\n    const [chartData, setChartData] = useState(null);\n\n    const updateChartData = (currentPrice) => {\n      const timestamp = Date.now();\n      // We are able to grab the previous state to look at it and do logic before adding new data to it\n      setChartData((prevState) => {\n        // If we have no previous state, create a new array with the new price data\n        if (!prevState)\n          return [\n            {\n              x: timestamp,\n              y: Number(currentPrice),\n            },\n          ]\n        // If the timestamp or price has not changed, we don't want to add a new point\n        if (\n          prevState[prevState.length - 1].x === timestamp ||\n          prevState[prevState.length - 1].y === Number(currentPrice)\n        )\n        return prevState;\n        // If we have previous state than keep it and add the new price data to the end of the array\n        return [\n          // Here we use the \"spread operator\" to copy the previous state\n          ...prevState,\n          {\n            x: timestamp,\n            y: Number(currentPrice),\n          }\n        ]\n      })\n    }\n\n    const getPrice = () => {\n      // Axios is a library that makes it easy to make http requests\n      // After we make a request, we can use the .then() method to handle the response asynchronously\n      // This is an alternative to using async/await\n      axios\n      .get(\"https://api.coinbase.com/v2/prices/BTC-USD/spot\")\n      // .then is a promise that will run when the API call is successful\n      .then((res) => {\n        console.log(\"Coinbase Price: \", res.data.data.amount);\n        setPrice(res.data.data.amount);\n      })\n      // .catch is a promise that will run if the API call fails\n      .catch((err) => {\n        console.log(err);\n      });\n     };\n     const getWalletBalance = () => {\n      // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n       const headers = {\n        \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\" ,\n       };\n       axios\n       .get(\"https://legend.lnbits.com/api/v1/wallet\" , { headers })\n       .then((res) => {\n        // Divide our balance by 1000 since it is denominated in millisats\n        setBalance(res.data.balance / 1000);\n       })\n       .catch((err) => console.log(err));\n    };\n    \n    const getTransactions = () => {\n      // ToDo: Lookup how to move the X-API-Key to a .env file to keep it secret for when we push to Github\n      const headers = {\n      \"X-Api-Key\": \"52cac212fc664da393ac45df991fdb84\" ,\n      };\n      axios\n        .get(\"https://legend.lnbits.com/api/v1/payments\" , { headers })\n        .then((res) => {\n          setTransactions (res.data);\n        })\n        .catch((err) => console.log(err));\n    };\n    // useEffect is a 'hook' or special function that will run code based on a trigger\n    // The brackets hold the trigger that determines when the code inside of useEffect will run\n    // Since it is empty [] that means this code will run once on page load\n    useEffect(() => {\n      getPrice();\n      getWalletBalance();\n      getTransactions();\n    }, []);\n\n    useEffect(() => {\n      // setInterval will run whatever is in the callback function every 5 seconds\n      const interval = setInterval(() => {\n        getPrice();\n        getWalletBalance();\n        getTransactions();\n      }, 5000);\n      return () => clearInterval(interval);\n    }, []);\nreturn (\n    <div className=\"App\">\n      <header>\n        <h1>pleb wallet</h1>\n      </header>\n      <Button />\n      <div className=\"row\">\n        <div className=\"balance-card\">\n          <h2>Balance</h2>\n          <p>{balance} sats</p>\n        </div>\n        <div className=\"balance-card\">\n          <h2>Price</h2>\n          <p>${price}</p> \n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"row-item\">\n        <Transactions transactions={transactions} />\n        </div>\n        <div className=\"row-item\"><Chart chartData={chartData} /></div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}