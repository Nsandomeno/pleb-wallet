{"ast":null,"code":"var _jsxFileName = \"/Users/nicholassandomeno/projects/pleb-wallet/src/components/Chart.js\";\nimport React from \"react\";\nimport LineChart from \"react-linechart\";\nimport \"../../node_modules/react-linechart/dist/styles.css\";\nimport \"./Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chart = _ref => {\n  let {\n    chartData\n  } = _ref;\n  if (!chartData && !(chartData !== null && chartData !== void 0 && chartData.length)) return null;\n  const data = [{\n    color: \"steelblue\",\n    points: chartData\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: chartData && chartData.length <= 1 ?\n    /*#__PURE__*/\n    // ToDo: Add a loading spinner\n    _jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(LineChart, {\n      xLabel: \"Time\",\n      height: 300\n      // ToDo: Customize width to be responsive based on screen size\n      ,\n      width: 550,\n      data: data,\n      onPointHover: obj => `price: $ ${obj.y}<br />time: ${obj.x}`,\n      ticks: 4,\n      hideYLabel: true,\n      hideXLabel: true,\n      xDisplay: timestamp => new Date(timestamp).toLocaleTimeString(\"en-US\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","LineChart","Chart","chartData","length","data","color","points","obj","y","x","timestamp","Date","toLocaleTimeString"],"sources":["/Users/nicholassandomeno/projects/pleb-wallet/src/components/Chart.js"],"sourcesContent":["import React from \"react\";\nimport LineChart from \"react-linechart\" ;\nimport \"../../node_modules/react-linechart/dist/styles.css\" ;\nimport \"./Chart.css\" ;\n\nconst Chart = ({ chartData }) => {\n    if (!chartData && !chartData?.length) return null;\n    const data = [\n        {\n            color: \"steelblue\",\n            points: chartData,\n        },\n    ];\n    return (\n        <div className =\"chart-container\">\n            {chartData && chartData.length <= 1 ? (\n                // ToDo: Add a loading spinner\n                <p>Loading</p>\n            ) : (\n            <LineChart\n                xLabel=\"Time\"\n                height={300}\n                // ToDo: Customize width to be responsive based on screen size\n                width={550}\n                data={data}\n                onPointHover={(obj) => `price: $ ${obj.y}<br />time: ${obj.x}`}\n                ticks={4}\n                hideYLabel={true}\n                hideXLabel={true}\n                xDisplay={(timestamp) =>\n                    new Date(timestamp).toLocaleTimeString (\"en-US\")\n                }\n            />\n            )}\n        </div>\n    );\n};\n\nexport default Chart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAO,oDAAoD;AAC3D,OAAO,aAAa;AAAE;AAEtB,MAAMC,KAAK,GAAG,QAAmB;EAAA,IAAlB;IAAEC;EAAU,CAAC;EACxB,IAAI,CAACA,SAAS,IAAI,EAACA,SAAS,aAATA,SAAS,eAATA,SAAS,CAAEC,MAAM,GAAE,OAAO,IAAI;EACjD,MAAMC,IAAI,GAAG,CACT;IACIC,KAAK,EAAE,WAAW;IAClBC,MAAM,EAAEJ;EACZ,CAAC,CACJ;EACD,oBACI;IAAK,SAAS,EAAE,iBAAiB;IAAA,UAC5BA,SAAS,IAAIA,SAAS,CAACC,MAAM,IAAI,CAAC;IAAA;IAC/B;IACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,gBAElB,QAAC,SAAS;MACN,MAAM,EAAC,MAAM;MACb,MAAM,EAAE;MACR;MAAA;MACA,KAAK,EAAE,GAAI;MACX,IAAI,EAAEC,IAAK;MACX,YAAY,EAAGG,GAAG,IAAM,YAAWA,GAAG,CAACC,CAAE,eAAcD,GAAG,CAACE,CAAE,EAAE;MAC/D,KAAK,EAAE,CAAE;MACT,UAAU,EAAE,IAAK;MACjB,UAAU,EAAE,IAAK;MACjB,QAAQ,EAAGC,SAAS,IAChB,IAAIC,IAAI,CAACD,SAAS,CAAC,CAACE,kBAAkB,CAAE,OAAO;IAClD;MAAA;MAAA;MAAA;IAAA;EAEJ;IAAA;IAAA;IAAA;EAAA,QACC;AAEd,CAAC;AAAC,KA/BIX,KAAK;AAiCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}